{
  "name": "minify",
  "description": "Minifier of js, css, html and img",
  "keywords": [
    "minify",
    "minimize",
    "js",
    "css",
    "img",
    "html",
    "base64"
  ],
  "version": "0.1.7",
  "author": {
    "name": "coderaiser",
    "email": "mnemonic.enemy@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/coudcmd/minify.git"
  },
  "scripts": {
    "test": "node test/test.js"
  },
  "preferGlobal": false,
  "dependencies": {
    "uglify-js": "1.3.3",
    "clean-css": "0.6.0",
    "html-minifier": "0.4.5",
    "css-b64-images": "0.2.1"
  },
  "main": "./minify",
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "Minify [![Build Status](https://secure.travis-ci.org/coderaiser/minify.png?branch=master)](http://travis-ci.org/coderaiser/minify)\n======\n\n**Minify** - a minifier of js, css, html and img files,\nused in [Cloud Commander](http://github.com/coderaiser/cloudcmd \"Cloud Commander\")\nproject.\n\nInstall\n---------------\nYou can install minify just like that:\n\n    npm i minify\nor\n    \n    git clone git://github.com/coderaiser/minify\n\nAPI\n---------------\n**Minify** module contains some api for interacting from another js files.\n\nTo use **Minify** functions it sould be connected first. It's doing like always.\n```js\nminify = require('minify');\n```\nAll of minification functions save files in **./min** directory with\nextension **.min** (*.min.js, *.min.css, *.min.html).\nIf directory could be created **minify.MinFolder** would countain stirng 'min/',\nin any other case - '/'.\n\n**optimize**(*pFiles_a*, *pCache_b*) - function which minificate js, html and\ncss-files.\n - **pFiles_a**                     - varible, wich contain array of file\nnames or string, if name single.\n - **pOptions**(optional)           - object contain main options.\n\n```js\npOptions = {cache: false, callback: func(){}};\n```\n\nif cache true - files do not writes on disk, just saves in Minify Cache.\n\n**Examples**:\n\n```js\nminify.optimize('client.js');\n```\n\n```js\nminify.optimize('client.js', {cache: true, callback: func(pMinData){}});\n```\n\nif a couple files:\n```js\nminify.optimize(['client.js',\n    'style.css']);\n```\n\nif post processing needed \n```js\nminify.optimize({\n    'client.js' : function(pFinalCode){}\n});\n```\n\nif post image converting needed (works with css only)\n```js\nminify.optimize([{'style.css':true},\n    'index.html']);\n```    \n\nif no need to write on disk\n```js\nminify.optimize('client.js', {\n    'client.js' : function(pFinalCode){}\n},true);\n```\n\nThen we can work with js data just like this:\n```js\nconsole.log(minify.Cache['client.js']);\n```\n\n**MinFolder** - varible thet contains folder name, where minimized files stored.\n                (could not be changed for now).\n                \nAdditional modules:\n---------------\n- [UglifyJS] (https://github.com/mishoo/UglifyJS)\n- [clean-css] (https://github.com/GoalSmashers/clean-css)\n- [html-minifier] (https://github.com/kangax/html-minifier)\n- [css-b64-images] (https://github.com/Filirom1/css-base64-images)\n\nInstall addtitional modules:\n\n    npm i uglify-js clean-css html-minifier css-b64-images",
  "_id": "minify@0.1.7",
  "dist": {
    "shasum": "e239a1285a949c14daf6ddbea774fbbd0df00eb9"
  },
  "_from": "minify@0.1.7"
}
